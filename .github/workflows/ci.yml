name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - uses: jsdaniell/create-json@v1.2.2
        with:
          name: "serviceAccountKey.json"
          json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          dir: 'api/src/main/resources/'

      - uses: finnp/create-file-action@1.0.0
        env:
          FILE_NAME: 'api/src/main/resources/keyBytes.txt'
          FILE_DATA: ${{ secrets.ENCRYPTION_KEY }}
      
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_GMAIL_PASSWORD: ${{ secrets.GMAIL_PASSWORD }}
          file_name: .env
          fail_on_empty: false

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Run tests
        run: cd api && chmod +x gradlew && ./gradlew test

      - name: Move sensitive files
        run: |
          mv src/main/resources/serviceAccountKey.json ../serviceAccountKey.json
          mv src/main/resources/keyBytes.txt ../keyBytes.txt

      - name: Build jar file
        run: cd api && chmod +x gradlew && ./gradlew bootJar

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: michael8pho/broncomarketplace-app:latest
      
      - name: Copy bin to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: api/build/libs/api-0.0.1-SNAPSHOT.jar
          target: /home/ec2-user/
          
      - name: Copy .env to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: keyBytes.txt
          target: /home/ec2-user/api/build/libs/

      - name: Copy serviceKey to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: serviceAccountKey.json
          target: /home/ec2-user/api/build/libs/
      
      - name: Restart server
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            sudo apt install docker.io
            sudo systemctl start docker
            docker version
            docker stop $(docker ps -aq) && docker rm $(docker ps -aq)
            docker pull michael8pho/broncomarketplace-app
            cd /home/ec2-user/api/build/libs/
            ls
            docker run -d -p 8080:8080 -v /path/to/serviceAccountKey.json:/app/serviceAccountKey.json --name marketplace michael8pho/broncomarketplace-app
            
            sudo iptables -t nat -I PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
            sudo iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
